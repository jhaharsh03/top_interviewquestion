Q Link: https://leetcode.com/problems/binary-tree-level-order-traversal/?envType=study-plan-v2&id=top-interview-150

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> levelOrder(TreeNode* root) {
         vector<vector<int>> res; 
         if(root == NULL){
             return res;
         }

         queue<TreeNode*> q;
         q.push(root);

         while(!q.empty()){
             int n = q.size();
             vector<int> lev;
             for(int i = 0; i< n ; i++){
             TreeNode* temp = q.front();
             
             q.pop();
             if(temp->left != NULL){q.push(temp->left);}
             if(temp->right!= NULL){q.push(temp->right);}
             lev.push_back(temp->val);
             }
             res.push_back(lev);
         }


         return res; 




        
    }
};
