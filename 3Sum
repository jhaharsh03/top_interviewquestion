Q Link : https://leetcode.com/problems/3sum/description/?envType=study-plan-v2&id=top-interview-150


class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        vector<vector<int>> res; 
        sort(nums.begin(), nums.end());
        int n = nums.size();
        for(int i =0; i< n ; i++){
            int target = -nums[i];

            int f = i+1, b = n-1; 
            while(f<b){
                int sum = nums[f]+nums[b];
                if(sum>target){
                    b--;
                }
                else if(sum<target){
                    f++;
                }
                else{
                    vector<int> trip = {nums[i], nums[f], nums[b]};
                    res.push_back(trip);
                    while(f<b && nums[f] == trip[1])f++;
                    while(f<b && nums[b] == trip[2])b--;
                }
            }
            while(i+1<n && nums[i+1] == nums[i])i++;
        }
        return res;
        
    }
};
