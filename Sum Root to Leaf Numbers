Q Link: https://leetcode.com/problems/sum-root-to-leaf-numbers/description/?envType=study-plan-v2&id=top-interview-150

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int sumNumbers(TreeNode* root) {
        int currsum = 0; 
        return sum(root , currsum);
        
    }

    int sum(TreeNode* root, int currsum){
        if(root == NULL)return 0;
        currsum = currsum*10 + root->val;
        if(root->left == NULL && root->right == NULL)return currsum;
        int leftsum = sum(root->left, currsum);
        int rightsum = sum(root->right, currsum);

        return leftsum + rightsum;

    }
};
